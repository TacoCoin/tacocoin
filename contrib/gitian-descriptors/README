Gavin's notes on getting gitian builds up and running using KVM:

These instructions distilled from:
  https://help.ubuntu.com/community/KVM/Installation
... see there for complete details.

You need the right hardware: you need a 64-bit-capable CPU with hardware virtualization support (Intel VT-x or AMD-V). Not all modern CPUs support hardware virtualization.

You probably need to enable hardware virtualization in your machine's BIOS.

You need to be running a recent version of 64-bit-Ubuntu, and you need to install several prerequisites:
  sudo apt-get install ruby apache2 git apt-cacher-ng python-vm-builder qemu-kvm

Sanity checks:
  sudo service apt-cacher-ng status   # Should return apt-cacher-ng is running
  ls -l /dev/kvm   # Should show a /dev/kvm device


Once you've got the right hardware and software:

    git clone git://github.com/tacocoin/tacocoin.git
    git clone git://github.com/devrandom/gitian-builder.git
    mkdir gitian-builder/inputs
    cd gitian-builder/inputs
    # Inputs for Linux and Win32:
    wget -O miniupnpc-1.6.tar.gz 'http://miniupnp.tuxfamily.org/files/download.php?file=miniupnpc-1.6.tar.gz'
    wget 'http://fukuchi.org/works/qrencode/qrencode-3.2.0.tar.bz2'
    # Inputs for Win32: (Linux has packages for these)
    wget 'https://downloads.sourceforge.net/project/boost/boost/1.55.0/boost_1_55_0.tar.bz2'
    wget --no-check-certificate 'https://svn.boost.org/trac/boost/raw-attachment/ticket/7262/boost-mingw.patch' -O boost-mingw-gas-cross-compile-2013-03-03.patch
    wget 'https://www.openssl.org/source/openssl-1.0.1p.tar.gz'
    wget 'http://download.oracle.com/berkeley-db/db-5.1.29.NC.tar.gz'
    wget 'https://downloads.sourceforge.net/project/libpng/zlib/1.2.6/zlib-1.2.6.tar.gz'
    wget 'https://downloads.sourceforge.net/project/libpng/libpng15/older-releases/1.5.9/libpng-1.5.9.tar.gz'
    wget 'http://download.qt-project.org/archive/qt/4.8/4.8.3/qt-everywhere-opensource-src-4.8.3.tar.gz'
    cd ../..

    cd gitian-builder
    bin/make-base-vm --lxc --arch i386 --suite precise
    bin/make-base-vm --lxc --arch amd64 --suite precise
    cd ..
    mkdir -p ~/made_tacos/{linux,windows}

    # Build Linux release:
    cd tacocoin
    git pull
    cd ../gitian-builder
    git pull
    ./bin/gbuild --commit tacocoin=HEAD ../tacocoin/contrib/gitian-descriptors/gitian.yml
    mv build/out/* ~/made_tacos/linux/

Expected SHA256 hashes for bin/32:

    52c87de9db9d8de083fa19668077c8edeb28a2a590e5dc3f553a000ab0c4a151  tacocoind
    030a89dfc56598bf2807920e1311ee0413c3f6062abc970d13ff44097a835e8f  tacocoin-qt

Expected SHA256 hashes for bin/64:

    75e575c9e4b17b98c81ae5430c8a1bbd5e0a4d1d77a55432903cdee2c772534b  tacocoind
    8900b27ead05c22aa17f8157de827683a9f7b898c421fcd296acee86ee962904  tacocoin-qt

    # Build Win32 dependencies: (only needs to be done once, or when dependency versions change)
    ./bin/gbuild --commit tacocoin=HEAD ../tacocoin/contrib/gitian-descriptors/boost-win32.yml
    mv build/out/boost-win32-1.55.0-gitian-r6.zip inputs/
    ./bin/gbuild --commit tacocoin=HEAD ../tacocoin/contrib/gitian-descriptors/deps-win32.yml
    mv build/out/bitcoin-deps-win32-gitian-r9.zip inputs/
    ./bin/gbuild --commit tacocoin=HEAD ../tacocoin/contrib/gitian-descriptors/qt-win32.yml
    mv build/out/qt-win32-4.8.3-gitian-r4.zip inputs/

Expected SHA256 hashes for intermediate inputs:

    add147712daaeaecb69086aea8633efe9d26993956b6ad9140d872cc07d078cd  boost-win32-1.55.0-gitian-r6.zip
    368ffba5cc0431c11beb555ef2d65402ecc9e54491045c0ae48f3cbae1b9817e  bitcoin-deps-win32-gitian-r9.zip
    018bdc197e2d043348f4cf0942470965be0792d66143fc4e2a2a7dc8e7599a03  qt-win32-4.8.3-gitian-r4.zip

    # Build Win32 release:
    ./bin/gbuild --commit tacocoin=HEAD ../tacocoin/contrib/gitian-descriptors/gitian-win32.yml
    mv build/out/tacocoin-qt.exe ~/made_tacos/windows/

Expected SHA256 hashes for the windows build:

    1dfa4c973957aa483883da4cebd02164968152090f864e5f2576500ee6f4ad2d  tacocoin-qt.exe

gitian-builder now also supports building using LXC. See
  https://help.ubuntu.com/12.04/serverguide/lxc.html
... for how to get LXC up and running under Ubuntu.

If your main machine is a 64-bit Mac or PC with a few gigabytes of memory
and at least 10 gigabytes of free disk space, you can gitian-build using
LXC running inside a virtual machine.

Here's a description of Gavin's setup on OSX 10.6:

1. Download and install VirtualBox from https://www.virtualbox.org/

2. Download the 64-bit Ubuntu Desktop 12.04 LTS .iso CD image from
  http://www.ubuntu.com/

3. Run VirtualBox and create a new virtual machine, using the
  Ubuntu .iso (see the VirtualBox documentation for details).
  Create it with at least 2 gigabytes of memory and a disk
  that is at least 20 gigabytes big.

4. Inside the running Ubuntu desktop, install:
  sudo apt-get install debootstrap lxc ruby apache2 git apt-cacher-ng python-vm-builder

5. Still inside Ubuntu, tell gitian-builder to use LXC, then follow the "Once you've got the right
  hardware and software" instructions above:
  export USE_LXC=1
  git clone git://github.com/tacocoin/tacocoin.git
  ... etc
